#MÉTODO DE JACOBI

#Programa que resuelve sistemas lineales por el método de Jacobi
import numpy as np

print('\t\t\tPrograma que resuelve el sistema lineal Ax=b por Jacobi\t\t\t\n')

#Definimos la matriz A y los vectores b y x0

A = np.array([[10.,-1.,2.,0.],[-1.,11.,-1.,3.],[2.,-1.,10.,-1.],[0.,3.,-1.,8.]])
b = np.array([6.,25.,-11.,15.])

x0 = np.array([0.,0.,0.,0.])

tol = 1e-4
itmax = 100
n = 4 #número de incógnitas

#Comenzamos con el código del método de Jacobi
k = 1
xn = np.zeros(n)
c = np.zeros(n)

while(k<=itmax):
  for i in range(n):
    c[i] = b[i]
    for j in range(n):
      if(j!=i):
        c[i] = c[i] - A[i,j]*x0[j] #donde A[i][j] = A[i,j]
        xn[i] = c[i]/A[i,i] #donde A[i,i] son los elementos de la diagonal
  error = np.linalg.norm(xn-x0) #usamos norma euclidiana l2
  if(error<=tol):
    break
  else:
    k+=1
    x0 = xn.copy()

#Imprimimos los resultados
if(k>itmax):
  print('\nERROR, se alcanzó el máximo de iteraciones, pero no la tolerancia...')
else:
  print('\nLa solución aproximada es: ', xn)
  print('Se alcanzó en la iteración: ', k)
