#MÉTODO DE LA POSICIÓN FALSA con Python

import numpy as np

titulo = 'PROGRAMA QUE RESUELVE ECUACIONES POR EL MÉTODO DE LA FALSA POSICIÓN'
print(f'\t\t\t{titulo}\t\t\t\n')

f = input('Escribe la función f(x): ')
feval = eval(f'lambda x: {f}')

#Pedimos los valores de arranque
p0 = float(input('Introduce la primera aproximación inicial p0: '))
p1 = float(input('Introduce la segunda aproximación inicial p1: '))
itmax = float(input('Establezca el número máximo de iteraciones: '))
tol = float(input('Indica la tolerancia deseada: '))

#Inicializamos el contador
i = 2

#Evaluamos la función en los extremos del intervalo
q0 = feval(p0)
q1 = feval(p1)

tabla = []

#Procedemos con el método
while(i<=itmax):
  p = p1 - (q1*(p1-p0)/(q1-q0))
  error = abs(p-p1)
  tabla.append([i, p, error])
  if(error<tol):
    break
  else:
    i+=1
    q = feval(p)
  if(q*q1<0):
    p0 = p1
    q0 = q1
  p1 = p
  q1 = q

tabla = np.array(tabla)

if(i>itmax):
  print('\nSe alcanzó el máximo de iteraciones, pero no la tolerancia...')
else:
  print('\nLa raíz aproximada es: ',p)
  print('Se alcanzó en la iteración: ',i)
  print('\n',tabla,'\n')
